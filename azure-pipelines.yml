# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'd41f8e79-c93a-4b13-af21-10317c9274f1'

  # Web app name
  webAppName: 'jkserver'

  # Environment name
  environmentName: 'jkserver'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  DB_HOSTNAME: 'maria.westeurope.cloudapp.azure.com'
  DB_USERNAME: 'testi'
  DB_PASSWORD: 'mariadb1'
  DB_NAME: 'testi1'
  REACT_APP_URL: 'https://jkserver.azurewebsites.net'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'

    - script: |
        npm install npm@latest
        cd backend
        npm install
        npm run build --if-present
        npm run test
        cd ../frontend
        npm install
        npm run build
        npm run test -- --watchAll=false
        cd ..   
      displayName: 'npm install, build and test'

    - script: |
        rm frontend/README.md
        rm frontend/.gitignore
        rm frontend/cypress.json
        rm frontend/package-lock.json
        rm backend/requests.rest
        rm backend/"Radu's Notes.txt"
        rm backend/package-lock.json
        rm -r .git
        rm azure-pipelines.yml
        rm -r backend/tests
        rm -r frontend/cypress
        rm -r frontend/src
        rm -r frontend/log
      displayName: 'Remove unnecessary files and folders from the deployment'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: jkserver'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|14'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'cd backend && npm run start'